{
  "/Users/jess/projects/personal/crossword/src/components/Cell.vue": {
    "path": "/Users/jess/projects/personal/crossword/src/components/Cell.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 18,
          "column": 6
        },
        "end": {
          "line": 18,
          "column": 46
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 17,
            "column": 4
          },
          "end": {
            "line": 17,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 17,
            "column": 14
          },
          "end": {
            "line": 19,
            "column": 5
          }
        },
        "line": 17
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 18,
            "column": 13
          },
          "end": {
            "line": 18,
            "column": 46
          }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": {
              "line": 18,
              "column": 28
            },
            "end": {
              "line": 18,
              "column": 41
            }
          },
          {
            "start": {
              "line": 18,
              "column": 44
            },
            "end": {
              "line": 18,
              "column": 46
            }
          }
        ],
        "line": 18
      }
    },
    "s": {
      "0": 3587
    },
    "f": {
      "0": 3587
    },
    "b": {
      "0": [
        873,
        2714
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/jess/projects/personal/crossword/src/components/Cell.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Cell.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <span class=\"cell\" data-testid=\"cell\" :class=\"classes\">\n    {{ letter }}\n    <span class=\"number\" data-testid=\"cell-number\">\n      {{ number !== 0 ? number : '' }}\n    </span>\n  </span>\n</template>\n\n<script>\n  export default {\n    props: {\n      letter: { type: String, default: '' },\n      number: { type: [String, Number], optional: true , default: ''},\n    },\n    computed: {\n      classes() {\n        return !this.letter ? 'blocked-out' : ''\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .cell {\n    position: relative;\n\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    min-width: 2.4rem;\n    min-height: 2.4rem;\n\n    width: 100%;\n\n    padding: 0.25rem;\n\n    font-size: 1rem;\n\n    border: 1px solid black;\n\n    vertical-align: top;\n\n    &.blocked-out {\n      background: black;\n    }\n\n    .number {\n      position: absolute;\n\n      display: inline-block;\n      margin-bottom: 1.75rem;\n      margin-left: 1.75rem;\n      font-size: .75rem;\n\n      color: #666;\n    }\n  }\n</style>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "31ace99bd02b1aa311abe6f6069b524640ee4153"
  },
  "/Users/jess/projects/personal/crossword/src/components/Gameboard.vue": {
    "path": "/Users/jess/projects/personal/crossword/src/components/Gameboard.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 23,
          "column": 6
        },
        "end": {
          "line": 29,
          "column": 7
        }
      },
      "1": {
        "start": {
          "line": 24,
          "column": 8
        },
        "end": {
          "line": 26,
          "column": 9
        }
      },
      "2": {
        "start": {
          "line": 25,
          "column": 10
        },
        "end": {
          "line": 25,
          "column": 52
        }
      },
      "3": {
        "start": {
          "line": 28,
          "column": 8
        },
        "end": {
          "line": 28,
          "column": 17
        }
      },
      "4": {
        "start": {
          "line": 32,
          "column": 6
        },
        "end": {
          "line": 32,
          "column": 65
        }
      },
      "5": {
        "start": {
          "line": 35,
          "column": 6
        },
        "end": {
          "line": 35,
          "column": 69
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 22,
            "column": 4
          },
          "end": {
            "line": 22,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 22,
            "column": 20
          },
          "end": {
            "line": 30,
            "column": 5
          }
        },
        "line": 22
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 23,
            "column": 13
          },
          "end": {
            "line": 23,
            "column": 14
          }
        },
        "loc": {
          "start": {
            "line": 23,
            "column": 34
          },
          "end": {
            "line": 29,
            "column": 7
          }
        },
        "line": 23
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 31,
            "column": 4
          },
          "end": {
            "line": 31,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 31,
            "column": 20
          },
          "end": {
            "line": 33,
            "column": 5
          }
        },
        "line": 31
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 34,
            "column": 4
          },
          "end": {
            "line": 34,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 34,
            "column": 20
          },
          "end": {
            "line": 36,
            "column": 5
          }
        },
        "line": 34
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 24,
            "column": 8
          },
          "end": {
            "line": 26,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 24,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          {
            "start": {
              "line": 24,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          }
        ],
        "line": 24
      }
    },
    "s": {
      "0": 27,
      "1": 3587,
      "2": 880,
      "3": 2707,
      "4": 27,
      "5": 27
    },
    "f": {
      "0": 27,
      "1": 3587,
      "2": 27,
      "3": 27
    },
    "b": {
      "0": [
        880,
        2707
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/jess/projects/personal/crossword/src/components/Gameboard.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Gameboard.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <div class=\"gameboard\" data-testid=\"gameboard\">\n    <div v-for=\"(letters, i) in lettersByRows\" :key=\"`r-${i}`\" data-testid=\"row\" class=\"row\">\n      <Cell v-for=\"(letter, j) in letters\"\n            :key=\"`r-${i}-c-${j}`\"\n            :letter=\"letter === '.' ? '' : letter\"\n            :number=\"numberForCell(i, j)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import Cell from './Cell'\n  import { chunk } from 'lodash'\n  export default {\n    components: { Cell },\n    props: {\n      crossword: { type: Object, required: true }\n    },\n    computed: {\n      numberForCell() {\n        return (rowIdx, cellIdx) => {\n          if (this.numbersByRows[rowIdx][cellIdx] > 0) {\n            return this.numbersByRows[rowIdx][cellIdx]\n          }\n\n          return ''\n        }\n      },\n      lettersByRows() {\n        return chunk(this.crossword.grid, this.crossword.size.cols)\n      },\n      numbersByRows() {\n        return chunk(this.crossword.gridnums, this.crossword.size.cols)\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .gameboard {\n    display: grid;\n    position: relative;\n\n    border: 1px solid black;\n    overflow: scroll;\n  }\n\n  .row {\n    display: flex;\n    position: relative;\n    width: 100%;\n  }\n</style>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "2fe7752d3b988c5c41836e364d92a68db8d4d660"
  }
}