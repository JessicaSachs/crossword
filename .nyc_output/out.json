{
  "/Users/jess/projects/personal/crossword/src/components/Cell.vue": {
    "path": "/Users/jess/projects/personal/crossword/src/components/Cell.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 28,
          "column": 15
        },
        "end": {
          "line": 30,
          "column": 3
        }
      },
      "1": {
        "start": {
          "line": 33,
          "column": 6
        },
        "end": {
          "line": 36,
          "column": 7
        }
      },
      "2": {
        "start": {
          "line": 34,
          "column": 8
        },
        "end": {
          "line": 34,
          "column": 24
        }
      },
      "3": {
        "start": {
          "line": 35,
          "column": 8
        },
        "end": {
          "line": 35,
          "column": 15
        }
      },
      "4": {
        "start": {
          "line": 37,
          "column": 6
        },
        "end": {
          "line": 37,
          "column": 28
        }
      },
      "5": {
        "start": {
          "line": 40,
          "column": 6
        },
        "end": {
          "line": 40,
          "column": 30
        }
      },
      "6": {
        "start": {
          "line": 45,
          "column": 6
        },
        "end": {
          "line": 45,
          "column": 49
        }
      },
      "7": {
        "start": {
          "line": 50,
          "column": 6
        },
        "end": {
          "line": 50,
          "column": 35
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 28,
            "column": 8
          },
          "end": {
            "line": 28,
            "column": 9
          }
        },
        "loc": {
          "start": {
            "line": 28,
            "column": 15
          },
          "end": {
            "line": 30,
            "column": 3
          }
        },
        "line": 28
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 32,
            "column": 4
          },
          "end": {
            "line": 32,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 32,
            "column": 25
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "line": 32
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 39,
            "column": 4
          },
          "end": {
            "line": 39,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 39,
            "column": 12
          },
          "end": {
            "line": 41,
            "column": 5
          }
        },
        "line": 39
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 44,
            "column": 4
          },
          "end": {
            "line": 44,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 44,
            "column": 14
          },
          "end": {
            "line": 46,
            "column": 5
          }
        },
        "line": 44
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 49,
            "column": 4
          },
          "end": {
            "line": 49,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 49,
            "column": 20
          },
          "end": {
            "line": 51,
            "column": 5
          }
        },
        "line": 49
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 33,
            "column": 6
          },
          "end": {
            "line": 36,
            "column": 7
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 7
            }
          },
          {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 36,
              "column": 7
            }
          }
        ],
        "line": 33
      },
      "1": {
        "loc": {
          "start": {
            "line": 45,
            "column": 13
          },
          "end": {
            "line": 45,
            "column": 49
          }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": {
              "line": 45,
              "column": 31
            },
            "end": {
              "line": 45,
              "column": 44
            }
          },
          {
            "start": {
              "line": 45,
              "column": 47
            },
            "end": {
              "line": 45,
              "column": 49
            }
          }
        ],
        "line": 45
      }
    },
    "s": {
      "0": 13230,
      "1": 24,
      "2": 0,
      "3": 0,
      "4": 24,
      "5": 0,
      "6": 14126,
      "7": 24
    },
    "f": {
      "0": 13230,
      "1": 24,
      "2": 0,
      "3": 14126,
      "4": 24
    },
    "b": {
      "0": [
        0,
        24
      ],
      "1": [
        2720,
        11406
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/jess/projects/personal/crossword/src/components/Cell.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Cell.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <span class=\"cell\" data-testid=\"cell\" :class=\"classes\">\n    <input type=\"text\"\n           data-testid=\"cell-input\"\n           :value=\"showLetter ? letter : value\"\n           :disabled=\"showLetter || blockedOut\"\n           autocomplete=\"false\"\n           ref=\"input\"\n           @beforeinput.prevent=\"filterManyLetters\"\n           @input=\"filterManyLetters\"\n    >\n    <span/>\n    <span class=\"number\" data-testid=\"cell-number\">\n      {{ number !== 0 ? number : '' }}\n    </span>\n  </span>\n</template>\n\n<script>\n  export default {\n    props: {\n      showLetter: { type: Boolean, default: false },\n      editable: { type: Boolean, default: true },\n      blockedOut: { type: Boolean, default: false },\n      letter: { type: String, default: '' },\n      number: { type: [String, Number], optional: true , default: ''},\n    },\n    data: () => ({\n      value: ''\n    }),\n    methods: {\n      filterManyLetters(e) {\n        if (e.data == null) {\n          this.value = '';\n          return;\n        }\n        this.value = e.data[0]\n      },\n      focus() {\n        this.$refs.input.focus()\n      }\n    },\n    computed: {\n      classes() {\n        return this.blockedOut ? 'blocked-out' : ''\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.$emit('input', newValue)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n  $cellSize: calc(2rem * var(--scale, 1));\n\n  input {\n    text-transform: uppercase;\n    width: $cellSize;\n    height: $cellSize;\n    display: block;\n    text-align: center;\n    font-size: unset;\n    font-family: unset;\n    border: none;\n    outline: none;\n    box-shadow: none\n  }\n\n  .cell.blocked-out input {\n    color: transparent;\n    background: black;\n  }\n\n  .cell input:focus-within + span {\n    color: deeppink;\n    @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {\n      &:before {\n        width: fill-available !important;\n        height: fill-available !important;\n      }\n    }\n\n    &:before {\n      position: absolute;\n      content: '';\n      left: 0;\n      top: 0;\n\n      z-index: 1;\n\n\n      width: calc(#{$cellSize} + 0.12rem);\n      height: calc(#{$cellSize} + 0.12rem);\n\n      box-shadow: 0 0 0 3px deeppink inset;\n\n    }\n  }\n\n  .cell {\n    /*box-shadow: 0 0 0 1px black;*/\n    border: 1px solid black;\n\n    text-transform: uppercase;\n    position: relative;\n\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    min-width: $cellSize;\n    min-height: $cellSize;\n\n    width: 100%;\n\n    font-size: 0.8rem;\n\n    vertical-align: top;\n\n    &.blocked-out {\n      background: black;\n      color: transparent;\n      pointer-events: none;\n    }\n\n    .number {\n      position: absolute;\n      pointer-events: none;\n\n      display: inline-block;\n\n      font-size: .6rem;\n\n      top: .2rem;\n      right: .2rem;\n\n      color: #666;\n    }\n  }\n</style>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "69119ac71b7da2ab5794a267c1f0e7af2b3d6a31"
  },
  "/Users/jess/projects/personal/crossword/src/components/Crossword.vue": {
    "path": "/Users/jess/projects/personal/crossword/src/components/Crossword.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 27,
          "column": 21
        },
        "end": {
          "line": 27,
          "column": 88
        }
      },
      "1": {
        "start": {
          "line": 27,
          "column": 57
        },
        "end": {
          "line": 27,
          "column": 87
        }
      },
      "2": {
        "start": {
          "line": 28,
          "column": 22
        },
        "end": {
          "line": 28,
          "column": 68
        }
      },
      "3": {
        "start": {
          "line": 29,
          "column": 6
        },
        "end": {
          "line": 29,
          "column": 55
        }
      },
      "4": {
        "start": {
          "line": 34,
          "column": 6
        },
        "end": {
          "line": 40,
          "column": 7
        }
      },
      "5": {
        "start": {
          "line": 35,
          "column": 8
        },
        "end": {
          "line": 37,
          "column": 9
        }
      },
      "6": {
        "start": {
          "line": 36,
          "column": 10
        },
        "end": {
          "line": 36,
          "column": 52
        }
      },
      "7": {
        "start": {
          "line": 39,
          "column": 8
        },
        "end": {
          "line": 39,
          "column": 17
        }
      },
      "8": {
        "start": {
          "line": 43,
          "column": 6
        },
        "end": {
          "line": 43,
          "column": 65
        }
      },
      "9": {
        "start": {
          "line": 46,
          "column": 6
        },
        "end": {
          "line": 46,
          "column": 69
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 26,
            "column": 4
          },
          "end": {
            "line": 26,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 26,
            "column": 22
          },
          "end": {
            "line": 30,
            "column": 5
          }
        },
        "line": 26
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 27,
            "column": 50
          },
          "end": {
            "line": 27,
            "column": 51
          }
        },
        "loc": {
          "start": {
            "line": 27,
            "column": 57
          },
          "end": {
            "line": 27,
            "column": 87
          }
        },
        "line": 27
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 33,
            "column": 4
          },
          "end": {
            "line": 33,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 33,
            "column": 20
          },
          "end": {
            "line": 41,
            "column": 5
          }
        },
        "line": 33
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 34,
            "column": 13
          },
          "end": {
            "line": 34,
            "column": 14
          }
        },
        "loc": {
          "start": {
            "line": 34,
            "column": 34
          },
          "end": {
            "line": 40,
            "column": 7
          }
        },
        "line": 34
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 42,
            "column": 4
          },
          "end": {
            "line": 42,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 42,
            "column": 20
          },
          "end": {
            "line": 44,
            "column": 5
          }
        },
        "line": 42
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 45,
            "column": 4
          },
          "end": {
            "line": 45,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 45,
            "column": 20
          },
          "end": {
            "line": 47,
            "column": 5
          }
        },
        "line": 45
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 35,
            "column": 8
          },
          "end": {
            "line": 37,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 35,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          {
            "start": {
              "line": 35,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          }
        ],
        "line": 35
      }
    },
    "s": {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 30,
      "5": 16590,
      "6": 4510,
      "7": 12080,
      "8": 44,
      "9": 44
    },
    "f": {
      "0": 0,
      "1": 0,
      "2": 30,
      "3": 16590,
      "4": 44,
      "5": 44
    },
    "b": {
      "0": [
        4510,
        12080
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/jess/projects/personal/crossword/src/components/Crossword.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Crossword.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <div class=\"crossword\" data-testid=\"crossword\">\n    <div v-for=\"(letters, i) in lettersByRows\" :key=\"`r-${i}`\" data-testid=\"row\" class=\"row\">\n      <Cell v-for=\"(letter, j) in letters\"\n            :show-letter=\"solved\"\n            :key=\"`r-${i}-c-${j}`\"\n            :ref=\"`r-${i}-c-${j}`\"\n            :blocked-out=\"letter === '.'\"\n            :letter=\"letter\"\n            :number=\"numberForCell(i, j)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n  import Cell from './Cell'\n  import { chunk } from 'lodash'\n  export default {\n    components: { Cell },\n    props: {\n      solved: { type: Boolean, default: false },\n      crossword: { type: Object, required: true }\n    },\n    methods: {\n      focus(clueNumber) {\n        const rowIdx = this.numbersByRows.findIndex(row => row.indexOf(clueNumber) !== -1)\n        const cellIdx = this.numbersByRows[rowIdx].indexOf(clueNumber)\n        this.$refs[`r-${rowIdx}-c-${cellIdx}`][0].focus()\n      }\n    },\n    computed: {\n      numberForCell() {\n        return (rowIdx, cellIdx) => {\n          if (this.numbersByRows[rowIdx][cellIdx] > 0) {\n            return this.numbersByRows[rowIdx][cellIdx]\n          }\n\n          return ''\n        }\n      },\n      lettersByRows() {\n        return chunk(this.crossword.grid, this.crossword.size.cols)\n      },\n      numbersByRows() {\n        return chunk(this.crossword.gridnums, this.crossword.size.cols)\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .crossword {\n    margin: 0 auto;\n    display: grid;\n    position: relative;\n    width: fit-content;\n\n    border: 1px solid black;\n    overflow: hidden;\n  }\n\n  .row {\n    display: flex;\n    position: relative;\n    width: fit-content;\n  }\n</style>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "66eff8dcdae1e7bfcf2998d9d45424a072a6d7ba"
  },
  "/Users/jess/projects/personal/crossword/src/App.vue": {
    "path": "/Users/jess/projects/personal/crossword/src/App.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 44,
          "column": 15
        },
        "end": {
          "line": 44,
          "column": 34
        }
      },
      "1": {
        "start": {
          "line": 45,
          "column": 19
        },
        "end": {
          "line": 45,
          "column": 52
        }
      },
      "2": {
        "start": {
          "line": 45,
          "column": 24
        },
        "end": {
          "line": 45,
          "column": 52
        }
      },
      "3": {
        "start": {
          "line": 46,
          "column": 16
        },
        "end": {
          "line": 46,
          "column": 71
        }
      },
      "4": {
        "start": {
          "line": 46,
          "column": 31
        },
        "end": {
          "line": 46,
          "column": 71
        }
      },
      "5": {
        "start": {
          "line": 51,
          "column": 17
        },
        "end": {
          "line": 51,
          "column": 51
        }
      },
      "6": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 5
        }
      },
      "7": {
        "start": {
          "line": 62,
          "column": 6
        },
        "end": {
          "line": 62,
          "column": 93
        }
      },
      "8": {
        "start": {
          "line": 67,
          "column": 25
        },
        "end": {
          "line": 67,
          "column": 64
        }
      },
      "9": {
        "start": {
          "line": 68,
          "column": 6
        },
        "end": {
          "line": 68,
          "column": 44
        }
      },
      "10": {
        "start": {
          "line": 69,
          "column": 6
        },
        "end": {
          "line": 69,
          "column": 47
        }
      },
      "11": {
        "start": {
          "line": 73,
          "column": 22
        },
        "end": {
          "line": 73,
          "column": 89
        }
      },
      "12": {
        "start": {
          "line": 73,
          "column": 31
        },
        "end": {
          "line": 73,
          "column": 89
        }
      },
      "13": {
        "start": {
          "line": 74,
          "column": 6
        },
        "end": {
          "line": 74,
          "column": 19
        }
      },
      "14": {
        "start": {
          "line": 77,
          "column": 6
        },
        "end": {
          "line": 77,
          "column": 36
        }
      },
      "15": {
        "start": {
          "line": 80,
          "column": 6
        },
        "end": {
          "line": 80,
          "column": 61
        }
      },
      "16": {
        "start": {
          "line": 81,
          "column": 6
        },
        "end": {
          "line": 81,
          "column": 27
        }
      },
      "17": {
        "start": {
          "line": 84,
          "column": 6
        },
        "end": {
          "line": 84,
          "column": 56
        }
      },
      "18": {
        "start": {
          "line": 85,
          "column": 6
        },
        "end": {
          "line": 85,
          "column": 27
        }
      },
      "19": {
        "start": {
          "line": 88,
          "column": 6
        },
        "end": {
          "line": 91,
          "column": 41
        }
      },
      "20": {
        "start": {
          "line": 89,
          "column": 26
        },
        "end": {
          "line": 89,
          "column": 41
        }
      },
      "21": {
        "start": {
          "line": 90,
          "column": 25
        },
        "end": {
          "line": 90,
          "column": 49
        }
      },
      "22": {
        "start": {
          "line": 91,
          "column": 22
        },
        "end": {
          "line": 91,
          "column": 40
        }
      },
      "23": {
        "start": {
          "line": 96,
          "column": 6
        },
        "end": {
          "line": 96,
          "column": 26
        }
      },
      "24": {
        "start": {
          "line": 97,
          "column": 6
        },
        "end": {
          "line": 97,
          "column": 34
        }
      },
      "25": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 101,
          "column": 25
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 45,
            "column": 19
          },
          "end": {
            "line": 45,
            "column": 20
          }
        },
        "loc": {
          "start": {
            "line": 45,
            "column": 24
          },
          "end": {
            "line": 45,
            "column": 52
          }
        },
        "line": 45
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 46,
            "column": 16
          },
          "end": {
            "line": 46,
            "column": 17
          }
        },
        "loc": {
          "start": {
            "line": 46,
            "column": 31
          },
          "end": {
            "line": 46,
            "column": 71
          }
        },
        "line": 46
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 50,
            "column": 2
          },
          "end": {
            "line": 50,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 50,
            "column": 9
          },
          "end": {
            "line": 59,
            "column": 3
          }
        },
        "line": 50
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 61,
            "column": 4
          },
          "end": {
            "line": 61,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 61,
            "column": 12
          },
          "end": {
            "line": 63,
            "column": 5
          }
        },
        "line": 61
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 66,
            "column": 4
          },
          "end": {
            "line": 66,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 66,
            "column": 21
          },
          "end": {
            "line": 70,
            "column": 5
          }
        },
        "line": 66
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 71,
            "column": 4
          },
          "end": {
            "line": 71,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 71,
            "column": 30
          },
          "end": {
            "line": 75,
            "column": 5
          }
        },
        "line": 71
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": {
          "start": {
            "line": 73,
            "column": 22
          },
          "end": {
            "line": 73,
            "column": 23
          }
        },
        "loc": {
          "start": {
            "line": 73,
            "column": 31
          },
          "end": {
            "line": 73,
            "column": 89
          }
        },
        "line": 73
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": {
          "start": {
            "line": 76,
            "column": 4
          },
          "end": {
            "line": 76,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 76,
            "column": 12
          },
          "end": {
            "line": 78,
            "column": 5
          }
        },
        "line": 76
      },
      "8": {
        "name": "(anonymous_8)",
        "decl": {
          "start": {
            "line": 79,
            "column": 4
          },
          "end": {
            "line": 79,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 79,
            "column": 21
          },
          "end": {
            "line": 82,
            "column": 5
          }
        },
        "line": 79
      },
      "9": {
        "name": "(anonymous_9)",
        "decl": {
          "start": {
            "line": 83,
            "column": 4
          },
          "end": {
            "line": 83,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 83,
            "column": 17
          },
          "end": {
            "line": 86,
            "column": 5
          }
        },
        "line": 83
      },
      "10": {
        "name": "(anonymous_10)",
        "decl": {
          "start": {
            "line": 87,
            "column": 4
          },
          "end": {
            "line": 87,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 87,
            "column": 37
          },
          "end": {
            "line": 92,
            "column": 5
          }
        },
        "line": 87
      },
      "11": {
        "name": "(anonymous_11)",
        "decl": {
          "start": {
            "line": 89,
            "column": 14
          },
          "end": {
            "line": 89,
            "column": 15
          }
        },
        "loc": {
          "start": {
            "line": 89,
            "column": 26
          },
          "end": {
            "line": 89,
            "column": 41
          }
        },
        "line": 89
      },
      "12": {
        "name": "(anonymous_12)",
        "decl": {
          "start": {
            "line": 90,
            "column": 14
          },
          "end": {
            "line": 90,
            "column": 15
          }
        },
        "loc": {
          "start": {
            "line": 90,
            "column": 25
          },
          "end": {
            "line": 90,
            "column": 49
          }
        },
        "line": 90
      },
      "13": {
        "name": "(anonymous_13)",
        "decl": {
          "start": {
            "line": 91,
            "column": 15
          },
          "end": {
            "line": 91,
            "column": 16
          }
        },
        "loc": {
          "start": {
            "line": 91,
            "column": 22
          },
          "end": {
            "line": 91,
            "column": 40
          }
        },
        "line": 91
      },
      "14": {
        "name": "(anonymous_14)",
        "decl": {
          "start": {
            "line": 95,
            "column": 4
          },
          "end": {
            "line": 95,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 95,
            "column": 18
          },
          "end": {
            "line": 98,
            "column": 5
          }
        },
        "line": 95
      },
      "15": {
        "name": "(anonymous_15)",
        "decl": {
          "start": {
            "line": 100,
            "column": 2
          },
          "end": {
            "line": 100,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 100,
            "column": 18
          },
          "end": {
            "line": 102,
            "column": 3
          }
        },
        "line": 100
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 87,
            "column": 19
          },
          "end": {
            "line": 87,
            "column": 35
          }
        },
        "type": "default-arg",
        "locations": [
          {
            "start": {
              "line": 87,
              "column": 26
            },
            "end": {
              "line": 87,
              "column": 35
            }
          }
        ],
        "line": 87
      }
    },
    "s": {
      "0": 5,
      "1": 5,
      "2": 28,
      "3": 5,
      "4": 14,
      "5": 14,
      "6": 14,
      "7": 28,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 2,
      "15": 7,
      "16": 7,
      "17": 7,
      "18": 7,
      "19": 28,
      "20": 28,
      "21": 28,
      "22": 0,
      "23": 14,
      "24": 14,
      "25": 14
    },
    "f": {
      "0": 28,
      "1": 14,
      "2": 14,
      "3": 28,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 2,
      "8": 7,
      "9": 7,
      "10": 28,
      "11": 28,
      "12": 28,
      "13": 0,
      "14": 14,
      "15": 14
    },
    "b": {
      "0": [
        28
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "/Users/jess/projects/personal/crossword/src/App.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "App.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <div id=\"app\">\n    <h1>Component Testing with Crosswords</h1>\n    <template v-if=\"crossword\">\n      <h2 data-testid=\"crossword-title\" v-html=\"crossword.title\"></h2>\n      <nav>\n        <p>Try a new Puzzle</p>\n\n        <button data-testid=\"prev\" @click=\"getPreviousDay\">Previous Day</button>\n        <button data-testid=\"next\" @click=\"getNextDay\">Next Day</button>\n\n        <p>Puzzle Controls</p>\n\n        <form @reset=\"reset\" @submit.prevent>\n          <button data-testid=\"reset\" type=\"reset\">Clear Crossword</button>\n          <button @click=\"solved = !solved\" data-testid=\"auto-solve\">Magic Solve Button</button>\n        </form>\n\n        <p>Size Controls</p>\n        <button @click=\"showCrossword = !showCrossword\">Show/Hide</button>\n        <button @click=\"toggleCrosswordSize(1)\">1.0x</button>\n        <button @click=\"toggleCrosswordSize(0.8)\">0.8x</button>\n        <button @click=\"toggleCrosswordSize(0.5)\">0.5x</button>\n      </nav>\n      <main>\n        <div v-if=\"!crossword\">Loading</div>\n        <Crossword class=\"crossword\" :crossword=\"crossword\" :solved=\"solved\" :key=\"crosswordKey\" v-show=\"showCrossword\" ref=\"crossword\"/>\n        <ul>\n          <li v-for=\"clue in clues\">\n            <h3 v-if=\"clue === 'Across' || clue === 'Down'\">{{ clue }}</h3>\n            <span v-else @click=\"jumpToCell(clue)\">{{ clue }}</span>\n          </li>\n        </ul>\n      </main>\n\n    </template>\n  </div>\n</template>\n\n<script>\n  import CrosswordBoard from '@/components/Crossword'\n\n  /** Date Utils **/\nconst oneDay = 1000 * 60 * 60 * 24\nconst formatDate = d => d.toISOString().slice(0, 10)\nconst addTime = (d, amount) => new Date(new Date(d).getTime() + amount)\n\nexport default {\n  name: 'App',\n  data() {\n    const date = formatDate(new Date('01/01/2012'))\n    return {\n      crossword: null,\n      crosswordKey: date,\n      date,\n      solved: false,\n      showCrossword: true\n    }\n  },\n  computed: {\n    clues() {\n      return ['Across', ...this.crossword.clues.across, 'Down', ...this.crossword.clues.down]\n    }\n  },\n  methods: {\n    jumpToCell(clue) {\n      const clueNumber = parseInt(clue.match(/(\\d+)\\w?/)[0], 10)\n      this.$refs.crossword.focus(clueNumber)\n      this.$refs.crossword.$el.scrollIntoView()\n    },\n    toggleCrosswordSize(size) {\n      // const getProp = () => document.documentElement.style.getPropertyValue('--scale')\n      const setProp = (val) => document.documentElement.style.setProperty('--scale', val)\n      setProp(size)\n    },\n    reset() {\n      this.crosswordKey = Date.now()\n    },\n    getPreviousDay() {\n      this.date = formatDate(addTime(this.date, -1 * oneDay))\n      this.fetchCrossword()\n    },\n    getNextDay() {\n      this.date = formatDate(addTime(this.date, oneDay))\n      this.fetchCrossword()\n    },\n    fetchCrossword(date = this.date) {\n      return fetch(`https://raw.githubusercontent.com/doshea/nyt_crosswords/master/${date.replace(/-+/g, '/')}.json`)\n        .then(response => response.json())\n        .then(payload => this.crossword = payload)\n        .catch(err => console.error(err))\n    }\n  },\n  watch: {\n    date(newDate) {\n      this.solved = false;\n      this.crosswordKey = newDate;\n    }\n  },\n  async created() {\n    this.fetchCrossword()\n  },\n  components: {\n    Crossword,\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n  ul {\n    display: flex;\n    list-style-type: none;\n    text-align: left;\n    flex-wrap: wrap;\n    flex-direction: column;\n    grid-column-gap: 1rem;\n    height: 740px;\n    overflow: scroll;\n    border-right: 20px solid white;\n\n    li {\n      font-size: 0.8rem;\n      width: 18ch;\n    }\n  }\n\n  main {\n    margin: 4.17rem auto;\n    width: 1200px;\n  }\n\n  @media only screen and (max-width: 600px) {\n    .crossword.crossword {\n      float: unset;\n      position: sticky;\n      top: 0;\n      margin: 0;\n      overflow: auto;\n    }\n\n    ul {\n      height: 120vh;\n      max-width: 120vw;\n      margin: 0;\n      padding: 1rem 0;\n    }\n\n    :root {\n      --scale: 0.5;\n    }\n  }\n\n  .crossword {\n    float: right;\n  }\n</style>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "c51cb186a07a596489bbfcb1609f2b71eb334ca7"
  }
}
